{"version":3,"sources":["serviceWorker.js","components/chartDialog.jsx","components/chart.jsx","components/chartContainer.jsx","components/lightSwitch.jsx","components/navbar.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","ChartDialog","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCategoryChange","event","newSubCategories","category","target","value","console","log","setState","selectedCategory","selectedSubCategory","subCategories","handleSubCategoryChange","handlePageChange","selectedPage","handleFilterChange","selectedFilter","handleShow","bind","assertThisInitialized","handleClose","categories","state","show","validated","currentTarget","checkValidity","preventDefault","stopPropagation","loadChart","chartNumber","_this2","map","index","react_default","a","createElement","key","Button_default","variant","onClick","className","Modal_default","onHide","Header","closeButton","Title","Body","Form_default","noValidate","onSubmit","e","handleSubmit","Row","Group","Label","Control","onChange","as","type","min","step","required","Footer","Component","Chart","handleRemoveChart","clearChart","modalShow","verticallyCenter","chart","series","Fragment","highcharts_react_min_default","highcharts","Highcharts","options","OverlayTrigger_default","trigger","overlay","closeTooltip","chartDialog","Popover_default","id","ChartContainer","charts","loadChartData","components_chart","LightSwitch","getSwitchIcon","name","checked","lightSwitched","onLightSwitch","classes","React","Navbar","href","lightSwitch","App","handleLightSwitch","newCharts","isLightSwitched","i","title","assign","createGraphBody","data","subCategory","units","theme","getCurrentTheme","chartNames","getChartTitle","yAxis","text","getUnitofMeasurement","style","color","textColor","backgroundColor","legend","enabled","xAxis","labels","gridLineColor","gridColor","colorByPoint","page","filter","fetch","then","res","json","result","createChartData","results","isLoaded","error","requestData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","element","parseInt","push","y","err","return","unit","charAt","toUpperCase","slice","darkTheme","lightTheme","document","getElementsByTagName","getCurrentThemeName","navbar","chartContainer","linearGradient","x1","y1","x2","y2","stops","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c37e9ec8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport Modal from \"react-bootstrap/lib/Modal\";\r\nimport Button from \"react-bootstrap/lib/Button\";\r\nimport Form from \"react-bootstrap/lib/Form\";\r\n\r\nclass ChartDialog extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.categories = [\"starships\", \"vehicles\", \"people\"];\r\n    this.state = {\r\n      show: this.props.show,\r\n      validated: false,\r\n      subCategories: [\"crew\", \"passengers\", \"length\"],\r\n      selectedCategory: \"starships\",\r\n      selectedSubCategory: \"crew\",\r\n      selectedPage: \"1\",\r\n      selectedFilter: 220\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      show: false\r\n    });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  }\r\n\r\n  handleCategoryChange = event => {\r\n    let category = event.target.value;\r\n    console.log(\"event value\", event.target.value);\r\n    let newSubCategories;\r\n    if (category === \"starships\" || category === \"vehicles\") {\r\n      newSubCategories = [\"crew\", \"length\", \"passengers\"];\r\n    } else {\r\n      newSubCategories = [\"height\", \"mass\"];\r\n    }\r\n    this.setState({\r\n      selectedCategory: category,\r\n      selectedSubCategory: newSubCategories[0],\r\n      subCategories: newSubCategories\r\n    });\r\n  };\r\n\r\n  handleSubCategoryChange = event => {\r\n    this.setState({ selectedSubCategory: event.target.value });\r\n  };\r\n\r\n  handlePageChange = event => {\r\n    this.setState({ selectedPage: event.target.value });\r\n  };\r\n\r\n  handleFilterChange = event => {\r\n    this.setState({ selectedFilter: event.target.value });\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.setState({ validated: true });\r\n    } else {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.setState({ show: false });\r\n      this.props.loadChart(\r\n        this.state.selectedCategory,\r\n        this.state.selectedSubCategory,\r\n        this.state.selectedPage,\r\n        this.props.chartNumber,\r\n        this.state.selectedFilter\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { validated } = this.state;\r\n    let categories = this.categories.map((category, index) => (\r\n      <option key={index} index={index} value={category}>\r\n        {category}\r\n      </option>\r\n    ));\r\n    let subCategories = this.state.subCategories.map((category, index) => (\r\n      <option key={index} value={category}>\r\n        {category}\r\n      </option>\r\n    ));\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"secondary\"\r\n          onClick={this.handleShow}\r\n          className=\"add-chart\"\r\n        >\r\n          Add chart\r\n        </Button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add chart</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form\r\n              noValidate\r\n              validated={validated}\r\n              onSubmit={e => this.handleSubmit(e)}\r\n            >\r\n              <Form.Row>\r\n                <Form.Group>\r\n                  <Form.Label>Category</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.handleCategoryChange}\r\n                    as=\"select\"\r\n                  >\r\n                    {categories}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Property</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.handleSubCategoryChange}\r\n                    as=\"select\"\r\n                    value={this.state.selectedSubCategory}\r\n                  >\r\n                    {subCategories}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Page</Form.Label>\r\n                  <Form.Control onChange={this.handlePageChange} as=\"select\">\r\n                    <option key=\"1\" value=\"1\">\r\n                      1\r\n                    </option>\r\n                    <option key=\"2\" value=\"2\">\r\n                      2\r\n                    </option>\r\n                    <option key=\"3\" value=\"3\">\r\n                      3\r\n                    </option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group>\r\n                  <Form.Label>Filter maximum value</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    min=\"10\"\r\n                    step=\"5\"\r\n                    value={this.state.selectedFilter}\r\n                    onChange={this.handleFilterChange}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Modal.Footer>\r\n                <Button type=\"submit\">Create</Button>\r\n                <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                  Cancel\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartDialog;\r\n","import React, { Component } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport ChartDialog from \"./chartDialog\";\r\nimport Popover from \"react-bootstrap/lib/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/lib/OverlayTrigger\";\r\n\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalShow: false,\r\n      verticallyCenter: true\r\n    };\r\n  }\r\n\r\n  handleRemoveChart = () => {\r\n    this.props.clearChart(this.props.chartNumber);\r\n  };\r\n\r\n  // Render graph if data is present, render placeholder and button to open dialog if not.\r\n  render() {\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n    let chartElement;\r\n    if (this.props.chart.series) {\r\n      chartElement = (\r\n        <React.Fragment>\r\n          <HighchartsReact highcharts={Highcharts} options={this.props.chart} />\r\n          <OverlayTrigger trigger={[\"hover\", \"focus\"]} overlay={closeTooltip}>\r\n            <button className=\"remove-chart\" onClick={this.handleRemoveChart}>\r\n              X\r\n            </button>\r\n          </OverlayTrigger>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      chartElement = (\r\n        <ChartDialog\r\n          show={this.state.modalShow}\r\n          onHide={modalClose}\r\n          loadChart={this.props.loadChart}\r\n          chartNumber={this.props.chartNumber}\r\n        />\r\n      );\r\n    }\r\n    return chartElement;\r\n  }\r\n}\r\n\r\nconst closeTooltip = (\r\n  <Popover id=\"popover-trigger-hover-focus\">Close chart</Popover>\r\n);\r\n\r\nexport default Chart;\r\n","import React, { Component } from \"react\";\r\nimport Chart from \"./chart\";\r\n\r\nclass ChartContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      charts: this.props.charts,\r\n      loadChartData: this.props.loadChartData,\r\n      clearChart: this.props.clearChart\r\n    };\r\n  }\r\n  // Renders the 2 x 2 chart grid.\r\n  render() {\r\n    let charts = this.props.charts.map((chart, index) => (\r\n      <div key={index} className={\"col span_\" + ((index % 2) + 1) + \"_of_2\"}>\r\n        <Chart\r\n          loadChart={this.props.loadChart}\r\n          clearChart={this.props.clearChart}\r\n          chart={chart}\r\n          chartNumber={index}\r\n        />\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"chart-container\">\r\n        <React.Fragment>{charts}</React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartContainer;\r\n","import React from \"react\";\r\n\r\nclass LightSwitch extends React.Component {\r\n  // The light switch is the trigger for dark/light mode.\r\n  render() {\r\n    return (\r\n      <span id=\"light-switch-container\" className=\"btn-group-toggle\">\r\n        <label className=\"btn btn-secondary\">\r\n          <i className={this.getSwitchIcon()} />\r\n          <input\r\n            name=\"lightSwitch\"\r\n            type=\"checkbox\"\r\n            checked={this.props.lightSwitched}\r\n            onChange={this.props.onLightSwitch}\r\n          />\r\n        </label>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  getSwitchIcon() {\r\n    let classes = \"fa-lightbulb \";\r\n    classes += this.props.lightSwitched ? \"fas\" : \"far\";\r\n    return classes;\r\n  }\r\n}\r\n\r\nexport default LightSwitch;\r\n","import React from \"react\";\r\nimport LightSwitch from \"./lightSwitch\";\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <a\r\n          className=\"navbar-brand\"\r\n          href=\"https://ctamas.github.io/swapiCharts/\"\r\n        >\r\n          <i className=\"far fa-chart-bar\" />\r\n          <span id=\"title\">Star Wars API React Charts</span>\r\n          <LightSwitch\r\n            lightSwitched={this.props.lightSwitched}\r\n            onLightSwitch={this.props.onLightSwitch}\r\n            id=\"lightSwitch\"\r\n          />\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport ChartContainer from \"./components/chartContainer\";\r\nimport Navbar from \"./components/navbar\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      isLightSwitched: false,\r\n      charts: [{}, {}, {}, {}]\r\n    };\r\n    this.chartNames = [];\r\n    // Charts to be loaded as default\r\n    this.loadChart(\"starships\", \"crew\", \"1\", 0, 220);\r\n    this.loadChart(\"people\", \"height\", \"2\", 3, 220);\r\n  }\r\n\r\n  handleLightSwitch = () => {\r\n    let newCharts = [{}, {}, {}, {}];\r\n    this.setState(\r\n      {\r\n        isLightSwitched: !this.state.isLightSwitched\r\n      },\r\n      // Wait for light switch status update before updating chart with new theme.\r\n      () => {\r\n        for (let i = 0; i < 4; i++) {\r\n          // Only re-theme existing charts.\r\n          if (this.state.charts[i].title) {\r\n            Object.assign(newCharts[i], this.createGraphBody(i));\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          charts: newCharts\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  getCurrentTheme() {\r\n    return this.state.isLightSwitched ? darkTheme : lightTheme;\r\n  }\r\n\r\n  getCurrentThemeName() {\r\n    return this.state.isLightSwitched ? \"dark-theme\" : \"light-theme\";\r\n  }\r\n\r\n  render() {\r\n    // Set global background to dark/light theme\r\n    document.getElementsByTagName(\r\n      \"html\"\r\n    )[0].className = this.getCurrentThemeName();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.getCurrentThemeName()}>\r\n          <Navbar\r\n            lightSwitched={this.state.isLightSwitched}\r\n            onLightSwitch={this.handleLightSwitch}\r\n          />\r\n          <ChartContainer\r\n            id=\"chart-container\"\r\n            loadChart={this.loadChart.bind(this)}\r\n            clearChart={this.clearChart.bind(this)}\r\n            charts={this.state.charts}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  createGraphBody = (chartNumber, data, category, subCategory) => {\r\n    let theme = this.getCurrentTheme();\r\n    let units;\r\n    // This section deals with keeping old chart values where relevant while updating chart theme.\r\n    this.chartNames[chartNumber] = category\r\n      ? this.getChartTitle(category, subCategory)\r\n      : this.chartNames[chartNumber];\r\n    if (!this.state.charts[chartNumber].yAxis) {\r\n      units = this.getUnitofMeasurement(subCategory);\r\n    } else {\r\n      units = this.state.charts[chartNumber].yAxis.title.text;\r\n    }\r\n\r\n    let chartTemplate = {\r\n      title: {\r\n        text: this.chartNames[chartNumber],\r\n        style: {\r\n          color: theme.textColor\r\n        }\r\n      },\r\n      chart: {\r\n        backgroundColor: theme.backgroundColor,\r\n        type: \"column\"\r\n      },\r\n      legend: {\r\n        enabled: false\r\n      },\r\n      xAxis: {\r\n        labels: {\r\n          style: {\r\n            color: theme.textColor\r\n          }\r\n        },\r\n        type: \"category\"\r\n      },\r\n      yAxis: {\r\n        gridLineColor: theme.gridColor,\r\n        labels: {\r\n          style: {\r\n            color: theme.textColor\r\n          }\r\n        },\r\n        title: {\r\n          style: {\r\n            color: theme.textColor\r\n          },\r\n          text: units\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          colorByPoint: true,\r\n          data: data ? data : this.state.charts[chartNumber].series[0].data\r\n        }\r\n      ]\r\n    };\r\n    return chartTemplate;\r\n  };\r\n\r\n  clearChart = chartNumber => {\r\n    let newCharts = this.state.charts;\r\n    newCharts[chartNumber] = {};\r\n    this.setState({\r\n      charts: newCharts\r\n    });\r\n  };\r\n\r\n  loadChart = (category, subCategory, page, chartNumber, filter) => {\r\n    let charts = this.state.charts;\r\n    fetch(\"https://swapi.co/api/\" + category + \"/?page=\" + page)\r\n      .then(res => res.json())\r\n      .then(\r\n        result => {\r\n          charts[chartNumber] = this.createGraphBody(\r\n            chartNumber,\r\n            this.createChartData(result.results, subCategory, filter),\r\n            category,\r\n            subCategory\r\n          );\r\n          this.setState({\r\n            isLoaded: true,\r\n            charts: charts\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  // Bring data from API to the format accepted by Highcharts.\r\n  createChartData = (category, subCategory, filter) => {\r\n    let requestData = [];\r\n    for (let element of category) {\r\n      if (parseInt(element[subCategory]) < filter) {\r\n        requestData.push({\r\n          name: element.name,\r\n          y: parseInt(element[subCategory])\r\n        });\r\n      }\r\n    }\r\n\r\n    return requestData;\r\n  };\r\n\r\n  getUnitofMeasurement = subCategory => {\r\n    let unit;\r\n    if (subCategory === \"crew\" || subCategory === \"passengers\") {\r\n      unit = \"People\";\r\n    } else if (subCategory === \"length\") {\r\n      unit = \"Meters\";\r\n    } else if (subCategory === \"mass\") {\r\n      unit = \"Kilograms\";\r\n    } else if (subCategory === \"height\") {\r\n      unit = \"Centimeters\";\r\n    }\r\n    return unit;\r\n  };\r\n\r\n  getChartTitle = (category, subCategory) => {\r\n    let title;\r\n    title =\r\n      subCategory.charAt(0).toUpperCase() +\r\n      subCategory.slice(1) +\r\n      \" of \" +\r\n      category;\r\n    if (this.state.charts[0].title) {\r\n      console.log(\"Old title\", this.state.charts[0].title.text);\r\n    }\r\n    return title;\r\n  };\r\n}\r\n\r\nconst darkTheme = {\r\n  textColor: \"#E0E0E3\",\r\n  gridColor: \"#707073\",\r\n  backgroundColor: {\r\n    linearGradient: { x1: 0, y1: 0, x2: 1, y2: 0 },\r\n    stops: [[0, \"#2a2a2b\"], [1, \"#3e3e40\"]]\r\n  }\r\n};\r\nconst lightTheme = {\r\n  textColor: \"#333333\",\r\n  gridColor: \"#e6e6e6\",\r\n  backgroundColor: \"#ffffff\"\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\n\n//render(<Chart chart={options} />, document.getElementById(\"root\"));\n//render(<ChartContainer />, document.getElementById(\"root\"));\n\nrender(<App />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}